{"version":3,"sources":["redux/patientReducer.js","redux/patientTypes.js","rootReducer.js","store.js","redux/patientActions.js","components/patientBlock/PatientBlock.js","Patients.js","components/button/Button.js","pages/login/Login.js","pages/home/Home.js","App.js","index.js"],"names":["initialState","loading","patients","error","reducer","state","action","type","payload","rootReducer","combineReducers","patient","patientReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","fetchPatientsRequest","PatientBlock","content","className","connect","patientData","dispatch","fetchPatients","axios","get","then","response","data","console","log","fetchPatientsSuccess","catch","errorMessage","message","fetchPatientsFailure","useEffect","map","firstName","lastName","socialSecurityNumber","Button","Login","for","placeholder","id","required","Home","App","path","exact","component","Patients","ReactDOM","render","basename","document","getElementById"],"mappings":"kTAMMA,EAAe,CACnBC,SAAS,EACTC,SAAU,GACVC,MAAO,IA2BMC,EAxBC,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAChD,OAAQA,EAAOC,MACb,ICdkC,yBDehC,OAAO,eACFF,EADL,CAEEJ,SAAS,IAEb,IClBkC,yBDmBhC,MAAO,CACLA,SAAS,EACTC,SAAUI,EAAOE,QACjBL,MAAO,IAEX,ICvBkC,yBDwBhC,MAAO,CACLF,SAAS,EACTC,SAAU,GACVC,MAAOG,EAAOE,SAElB,QACE,OAAOH,IEzBEI,EAJKC,0BAAgB,CAClCC,QAASC,ICMIC,EALDC,sBACZL,EACAM,8BAAoBC,0BAAgBC,O,iBCAzBC,EAAuB,WAClC,MAAO,CACLX,KHTkC,2BIUvBY,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,yBAAKC,UAAU,kBACZD,ICsDQE,eAZS,SAAAjB,GACtB,MAAO,CACLkB,YAAalB,EAAMM,YAIK,SAAAa,GAC1B,MAAO,CACLC,cAAe,kBAAMD,GF3BhB,SAACA,GACNA,EAASN,GACTQ,IAAMC,IAAI,yCACPC,MAAK,SAAAC,GACJ,IAAM3B,EAAW2B,EAASC,KAC1BC,QAAQC,IAAI9B,GACZsB,EArB4B,SAAAtB,GAClC,MAAO,CACLK,KHdkC,yBGelCC,QAASN,GAkBI+B,CAAqB/B,OAE/BgC,OAAM,SAAA/B,GACL,IAAMgC,EAAehC,EAAMiC,QAC3BZ,EAlB4B,SAAArB,GAClC,MAAO,CACLI,KHpBkC,yBGqBlCC,QAASL,GAeIkC,CAAqBF,cEqBvBb,EApDE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaE,EAAmB,EAAnBA,cAM/B,OAJAa,qBAAU,WACRb,MACC,IAEIF,EAAYtB,QACjB,uCACEsB,EAAYpB,MACd,4BAAKoB,EAAYpB,OAEjB,yBAAKkB,UAAU,OACb,4CACA,6BAEIE,EAAYrB,UACZqB,EAAYrB,SAASqC,KACnB,SAAA5B,GAAO,OACP,kBAAC,EAAD,CAAcS,QACZ,oCACE,sCACKT,EAAQ6B,UADb,YAC0B7B,EAAQ8B,WAElC,4BACE9B,EAAQ+B,iCCpBXC,G,kBARA,SAAC,GAAiB,IAAfvB,EAAc,EAAdA,QAChB,OACE,4BAAQb,KAAK,UACTa,KCsBOwB,EAvBD,WACZ,OACE,yBAAKvB,UAAU,qBACb,6BAASA,UAAU,uBACjB,yBAAKA,UAAU,6BACb,oCACA,0GAEF,8BACE,2BAAOwB,IAAI,mBAAX,YACA,2BAAOtC,KAAK,OAAOuC,YAAY,sBAAsBC,GAAG,kBAAkBC,UAAQ,IAClF,2BAAOH,IAAI,mBAAX,YACA,2BAAOtC,KAAK,WAAWuC,YAAY,sBAAsBC,GAAG,kBAAkBC,UAAQ,IACtF,6BACE,kBAAC,EAAD,CAAQ5B,QAAS,UACjB,yDCVG6B,EARF,WACX,OACE,sCCiBWC,EAZH,WACV,OACE,kBAAC,IAAD,CAAUrC,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsC,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,KAAK,QAAQE,UAAWJ,IAC/B,kBAAC,IAAD,CAAOE,KAAK,YAAYE,UAAWC,O,gBCT3CC,IAASC,OACP,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f4bdd290.chunk.js","sourcesContent":["import {\r\n  FETCH_PATIENTS_REQUEST,\r\n  FETCH_PATIENTS_SUCCESS,\r\n  FETCH_PATIENTS_FAILURE\r\n} from \"./patientTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  patients: [],\r\n  error: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PATIENTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FETCH_PATIENTS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        patients: action.payload,\r\n        error: ''\r\n      }\r\n    case FETCH_PATIENTS_FAILURE:\r\n      return {\r\n        loading: false,\r\n        patients: [],\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","export const FETCH_PATIENTS_REQUEST = 'FETCH_PATIENTS_REQUEST';\r\nexport const FETCH_PATIENTS_SUCCESS = 'FETCH_PATIENTS_SUCCESS';\r\nexport const FETCH_PATIENTS_FAILURE = 'FETCH_PATIENTS_FAILURE';\r\n","import { combineReducers } from 'redux';\r\nimport patientReducer from './redux/patientReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  patient: patientReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  FETCH_PATIENTS_REQUEST,\r\n  FETCH_PATIENTS_SUCCESS,\r\n  FETCH_PATIENTS_FAILURE \r\n} from \"./patientTypes\";\r\n\r\nexport const fetchPatientsRequest = () => {\r\n  return {\r\n    type: FETCH_PATIENTS_REQUEST\r\n  };\r\n};\r\n\r\nexport const fetchPatientsSuccess = patients => {\r\n  return {\r\n    type: FETCH_PATIENTS_SUCCESS,\r\n    payload: patients\r\n  };\r\n};\r\n\r\nexport const fetchPatientsFailure = error => {\r\n  return {\r\n    type: FETCH_PATIENTS_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const fetchPatients = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchPatientsRequest)\r\n    axios.get('http://localhost:8000/api/getPatients')\r\n      .then(response => {\r\n        const patients = response.data\r\n        console.log(patients)\r\n        dispatch(fetchPatientsSuccess(patients))\r\n      })\r\n      .catch(error => {\r\n        const errorMessage = error.message\r\n        dispatch(fetchPatientsFailure(errorMessage))\r\n      })\r\n  };\r\n};\r\n","import React from 'react'\r\n\r\nconst PatientBlock = ({ content }) => {\r\n  return (\r\n    <div className=\"block__patient\">\r\n      {content}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PatientBlock;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchPatients } from './redux/patientActions';\r\nimport PatientBlock from './components/patientBlock/PatientBlock';\r\nexport * from './redux/patientActions';\r\n\r\nconst Patients = ({ patientData, fetchPatients}) => {\r\n\r\n  useEffect(() => {\r\n    fetchPatients()\r\n  }, [])\r\n\r\n  return patientData.loading ? (\r\n    <h2>Loading</h2>\r\n  ) : patientData.error ? (\r\n    <h2>{patientData.error}</h2>\r\n  ) : (\r\n    <div className=\"App\">\r\n      <h2>Patient List</h2>\r\n      <div>\r\n        {\r\n          patientData.patients &&\r\n          patientData.patients.map(\r\n            patient =>\r\n            <PatientBlock content={\r\n              <>\r\n                <h2>\r\n                { `${patient.firstName} ${patient.lastName}` }\r\n                </h2>\r\n                <h3>\r\n                { patient.socialSecurityNumber }\r\n                </h3>\r\n              </>\r\n            } />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPatients.propTypes = {\r\n  fetchPatients: PropTypes.func.isRequired,\r\n  patientData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    patientData: state.patient\r\n  }\r\n}\r\n\r\nconst mapdDispatchToProps = dispatch => {\r\n  return {\r\n    fetchPatients: () => dispatch(fetchPatients())\r\n  }\r\n}\r\n\r\nexport default connect (\r\n  mapStateToProps,\r\n  mapdDispatchToProps\r\n)(Patients);\r\n","import React from 'react';\r\nimport './button.css';\r\n\r\nconst Button = ({ content }) => {\r\n  return (\r\n    <button type=\"submit\">\r\n      { content }\r\n    </button>\r\n  )\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport '../pages.css';\r\nimport './login.css';\r\nimport Button from '../../components/button/Button';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className=\" page page__login\">\r\n      <section className=\"page__login_section\">\r\n        <div className=\"page__login_section_intro\">\r\n          <h1>MYRA</h1>\r\n          <p>\"The modern, streamlined way of tracking and reporting your patient work.\"</p>\r\n        </div>\r\n        <form>\r\n          <label for=\"input__username\">USERNAME</label> \r\n          <input type=\"text\" placeholder=\"Input your username\" id=\"input__username\" required></input>\r\n          <label for=\"input__password\">PASSWORD</label>\r\n          <input type=\"password\" placeholder=\"Input your password\" id=\"input__password\" required></input>\r\n          <div>\r\n            <Button content={\"LOGIN\"} />\r\n            <a>Forgot your password?</a>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Login;","import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      Home    \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport Patients from './Patients';\r\nimport Login from './pages/login/Login';\r\nimport Home from './pages/home/Home';\r\nexport * from './redux/patientActions';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/patients\" component={Patients}/>\r\n      </Switch>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <App />\n  </HashRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}